{"version":3,"file":"alarmsview.chunk.0.js","sources":["/plugin:alarmsview/plugins/alarmsview/public/application.tsx","/plugin:alarmsview/plugins/alarmsview/public/components/alarmsgrid.tsx","/plugin:alarmsview/plugins/alarmsview/public/components/app.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AlarmsviewApp } from './components/app';\nexport const renderApp = ({\n  notifications,\n  http\n}, {\n  navigation\n}, {\n  appBasePath,\n  element\n}) => {\n  ReactDOM.render( /*#__PURE__*/React.createElement(AlarmsviewApp, {\n    basename: appBasePath,\n    notifications: notifications,\n    http: http,\n    navigation: navigation\n  }), element);\n  return () => ReactDOM.unmountComponentAtNode(element);\n};","import React, { useCallback, useEffect, useMemo, useState, createContext, useContext, useRef } from 'react';\nimport { EuiDataGrid //   EuiLink,\n//   EuiFlexGroup,\n//   EuiFlexItem,\n//   EuiPopover,\n//   EuiPopoverTitle,\n, EuiButtonIcon //   EuiSpacer,\n} from '@elastic/eui';\n\nconst init_data = require('../data/rawData.json');\n\nlet raw_data = [];\nconst DataContext = /*#__PURE__*/createContext(raw_data);\n\nfor (let i = 0; i < init_data.length; i++) {\n  const alarmId = init_data[i]._source.alarm_id;\n  const title = init_data[i]._source.title;\n  const timestamp = init_data[i]._source.timestamp;\n  const updatedTimestamp = init_data[i]._source.updated_time;\n  const status = init_data[i]._source.status;\n  const risk = init_data[i]._source.risk_class;\n  const tag = init_data[i]._source.tag;\n\n  const sources = init_data[i]._source.src_ips.join(',');\n\n  const destinations = init_data[i]._source.dst_ips.join(',');\n\n  raw_data.push({\n    Alarm_ID: {\n      formatted: `${alarmId}`,\n      raw: alarmId\n    },\n    Title: {\n      formatted: `${title}`,\n      raw: title\n    },\n    Created: {\n      formatted: `${timestamp}`,\n      raw: timestamp\n    },\n    Updated: {\n      formatted: `${updatedTimestamp}`,\n      raw: updatedTimestamp\n    },\n    Status: {\n      formatted: `${status}`,\n      raw: status\n    },\n    Risk: {\n      formatted: `${risk}`,\n      raw: risk\n    },\n    Tag: {\n      formatted: `${tag}`,\n      raw: tag\n    },\n    Sources: {\n      formatted: `${sources}`,\n      raw: sources\n    },\n    Destinations: {\n      formatted: `${destinations}`,\n      raw: destinations\n    }\n  });\n}\n\nconst columns = [{\n  id: 'Alarm_ID',\n  displayAsText: 'Alarm ID',\n  defaulltSortDirection: 'asc'\n}, {\n  id: 'Title',\n  displayAsText: 'Title',\n  initiaWidth: 130\n}, {\n  id: 'Created',\n  displayAsText: 'Created'\n}, {\n  id: 'Updated',\n  displayAsText: 'Updated'\n}, {\n  id: 'Status',\n  displayAsText: 'Status'\n}, {\n  id: 'Risk',\n  displayAsText: 'Risk'\n}, {\n  id: 'Tag',\n  displayAsText: 'Tag'\n}, {\n  id: 'Sources',\n  displayAsText: 'Sources'\n}, {\n  id: 'Destinations',\n  displayAsText: 'Destinations'\n}];\nconst trailingControlColumns = [{\n  id: 'actions',\n  width: 40,\n  headerCellRender: () => null,\n  rowCellRender: function RowCellRender() {\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(EuiButtonIcon, {\n      \"aria-label\": \"show actions\",\n      iconType: \"eye\",\n      color: \"text\",\n      onClick: () => console.log(\"Open\")\n    }), /*#__PURE__*/React.createElement(EuiButtonIcon, {\n      \"aria-label\": \"show actions\",\n      iconType: \"trash\",\n      color: \"text\",\n      onClick: () => console.log(\"Trash\")\n    }));\n  }\n}];\n\nconst AlarmsGrid = () => {\n  const [pagination, setPagination] = useState({\n    pageIndex: 0,\n    pageSize: 10\n  });\n  const onChangeItemsPerPage = useCallback(pageSize => setPagination(pagination => ({ ...pagination,\n    pageSize,\n    pageIndex: 0\n  })), [setPagination]);\n  const onChangePage = useCallback(pageIndex => setPagination(pagination => ({ ...pagination,\n    pageIndex\n  })), [setPagination]); // Column visibility\n\n  const [visibleColumns, setVisibleColumns] = useState(() => columns.map(({\n    id\n  }) => id)); // initialize to the full set of columns\n\n  const renderCellValue = useMemo(() => {\n    return ({\n      rowIndex,\n      columnId,\n      setCellProps\n    }) => {\n      const data = useContext(DataContext);\n      useEffect(() => {\n        if (columnId === 'amount') {\n          if (data.hasOwnProperty(rowIndex)) {\n            const numeric = parseFloat(data[rowIndex][columnId].match(/\\d+\\.\\d+/)[0], 10);\n            setCellProps({\n              style: {\n                backgroundColor: `rgba(0, 255, 0, ${numeric * 0.0002})`\n              }\n            });\n          }\n        }\n      }, [rowIndex, columnId, setCellProps, data]);\n\n      function getFormatted(rowIndex, columnId) {\n        return data[rowIndex][columnId].formatted ? data[rowIndex][columnId].formatted : data[rowIndex][columnId];\n      }\n\n      return data.hasOwnProperty(rowIndex) ? getFormatted(rowIndex, columnId) : null;\n    };\n  }, []);\n  const onColumnResize = useRef(eventData => {\n    console.log(eventData);\n  });\n  return /*#__PURE__*/React.createElement(DataContext.Provider, {\n    value: raw_data\n  }, /*#__PURE__*/React.createElement(EuiDataGrid, {\n    \"aria-label\": \"alarmsView\",\n    columns: columns,\n    columnVisibility: {\n      visibleColumns,\n      setVisibleColumns\n    },\n    trailingControlColumns: trailingControlColumns,\n    rowCount: raw_data.length,\n    renderCellValue: renderCellValue,\n    inMemory: {\n      level: 'sorting'\n    },\n    pagination: { ...pagination,\n      pageSizeOptions: [10, 50, 100],\n      onChangeItemsPerPage: onChangeItemsPerPage,\n      onChangePage: onChangePage\n    },\n    onColumnResize: onColumnResize.current\n  }));\n};\n\nexport default AlarmsGrid;","import React, { useState } from 'react';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, I18nProvider } from '@kbn/i18n/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AlarmsGrid from './alarmsgrid';\nimport { EuiButton, EuiHorizontalRule, EuiPage, EuiPageBody, EuiPageContent, EuiPageContentBody, EuiPageContentHeader, EuiPageHeader, EuiTitle, EuiText } from '@elastic/eui';\nimport { PLUGIN_ID, PLUGIN_NAME } from '../../common';\nexport const AlarmsviewApp = ({\n  basename,\n  notifications,\n  http,\n  navigation\n}) => {\n  // Use React hooks to manage state.\n  const [timestamp, setTimestamp] = useState();\n\n  const onClickHandler = () => {\n    // Use the core http service to make a response to the server API.\n    http.get('/api/alarmsview/example').then(res => {\n      setTimestamp(res.time); // Use the core notifications service to display a success message.\n\n      notifications.toasts.addSuccess(i18n.translate('alarmsview.dataUpdated', {\n        defaultMessage: 'Data updated'\n      }));\n    });\n  }; // Render the application DOM.\n  // Note that `navigation.ui.TopNavMenu` is a stateful component exported on the `navigation` plugin's start contract.\n\n\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename\n  }, /*#__PURE__*/React.createElement(I18nProvider, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(navigation.ui.TopNavMenu, {\n    appName: PLUGIN_ID,\n    showSearchBar: true,\n    useDefaultBehaviors: true\n  }), /*#__PURE__*/React.createElement(EuiPage, {\n    restrictWidth: \"1000px\"\n  }, /*#__PURE__*/React.createElement(EuiPageBody, null, /*#__PURE__*/React.createElement(EuiPageHeader, null, /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"l\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"alarmsview.helloWorldText\",\n    defaultMessage: \"{name}\",\n    values: {\n      name: PLUGIN_NAME\n    }\n  })))), /*#__PURE__*/React.createElement(EuiPageContent, null, /*#__PURE__*/React.createElement(EuiPageContentHeader, null, /*#__PURE__*/React.createElement(EuiTitle, null, /*#__PURE__*/React.createElement(\"h2\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"alarmsview.congratulationsTitle\",\n    defaultMessage: \"Testing things out!\"\n  })))), /*#__PURE__*/React.createElement(EuiPageContentBody, null, /*#__PURE__*/React.createElement(EuiText, null, /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"alarmsview.content\",\n    defaultMessage: \"Look through the generated code and check out the plugin development documentation.\"\n  })), /*#__PURE__*/React.createElement(EuiHorizontalRule, null), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"alarmsview.timestampText\",\n    defaultMessage: \"Last timestamp: {time}\",\n    values: {\n      time: timestamp ? timestamp : 'Unknown'\n    }\n  })), /*#__PURE__*/React.createElement(EuiButton, {\n    type: \"primary\",\n    size: \"s\",\n    onClick: onClickHandler\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"alarmsview.buttonText\",\n    defaultMessage: \"Get data\"\n  })), /*#__PURE__*/React.createElement(AlarmsGrid, null)))))))));\n};"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnsourceRoot":""}